(function(){define(["jquery-private","gcviz-vm-tbdraw","dijit/TitlePane","gcviz-i18n"],function(c,d,b,e){var a;a=function(i){var h,g=i.toolbardraw,f=i.mapframe.id,l,j="",k=i.find(".gcviz-tbholder");g.urldownload=i.mapframe.map.urldownload;k.append('<div class="gcviz-tbspacer"></div>');l=new b({id:"tbdraw"+f,title:""+e.getDict("%toolbardraw-name")+"",content:'<div class="gcviz-tbdraw-content gcviz-tbcontent"></div>',open:g.expand});k.append(l.domNode);l.startup();l.on("click",function(){c(".gcviz-tbholder").scrollTo(c(".gcviz-tbdraw-content"))});h=i.find(".gcviz-tbdraw-content");j+='<div class="gcviz-draw-row1">';j+='<div class="gcviz-draw-cholder"><button class="gcviz-draw-black" tabindex="0" data-bind="click: function() { selectColorClick(\'black\') }, tooltip: { content: tpBlack }, css: {\'gcviz-draw-pickblack\': selectedColor() === \'black\' }"></button><button class="gcviz-draw-blue" tabindex="0" data-bind="click: function() { selectColorClick(\'blue\') }, tooltip: { content: tpBlue }, css: {\'gcviz-draw-pickblue\': selectedColor() === \'blue\' }"></button><button class="gcviz-draw-green" tabindex="0" data-bind="click: function() { selectColorClick(\'green\') }, tooltip: { content: tpGreen }, css: {\'gcviz-draw-pickgreen\': selectedColor() === \'green\' }"></button><button class="gcviz-draw-red" tabindex="0" data-bind="click: function() { selectColorClick(\'red\') }, tooltip: { content: tpRed }, css: {\'gcviz-draw-pickred\': selectedColor() === \'red\' }"></button><button class="gcviz-draw-yellow" tabindex="0" data-bind="click: function() { selectColorClick(\'yellow\') }, tooltip: { content: tpYellow }, css: {\'gcviz-draw-pickyellow\': selectedColor() === \'yellow\' }"></button><button class="gcviz-draw-white" tabindex="0" data-bind="click: function() { selectColorClick(\'white\') }, tooltip: { content: tpWhite }, css: {\'gcviz-draw-pickwhite\': selectedColor() === \'white\' }"></button><button class="gcviz-draw-arrow" tabindex="-1"></button></div>';j+='<div class="gcviz-tbseparator"></div>';if(g.drawline.enable){j+='<button class="gcviz-draw-line" tabindex="0" data-bind="buttonBlur, click: drawClick, tooltip: { content: tpDraw }"></button>'}if(g.drawtext.enable){j+='<button class="gcviz-draw-text" tabindex="0" data-bind="buttonBlur, click: textClick, tooltip: { content: tpText }"></button>'}j+='<div class="gcviz-tbseparator"></div>';if(g.measureline.enable){j+='<button class="gcviz-draw-length" tabindex="0" data-bind="buttonBlur, click: measureLengthClick, tooltip: { content: tpMeasureLength }"></button>'}if(g.measurearea.enable){j+='<button class="gcviz-draw-area" tabindex="0" data-bind="buttonBlur, click: measureAreaClick, tooltip: { content: tpMeasureArea }"></button>'}j+="</div>";j+='<div class="row gcviz-inlineblock"><button class="gcviz-draw-del" tabindex="0" data-bind="buttonBlur, click: eraseClick, tooltip: { content: tpErase }, enable: isGraphics"></button><button class="gcviz-draw-delsel" tabindex="0" data-bind="buttonBlur, click: eraseSelClick, tooltip: { content: tpEraseSel }, enable: isGraphics"></button></div>';j+='<div class="gcviz-tbseparator"></div>';j+='<div class="row gcviz-inlineblock"><button class="gcviz-draw-undo" tabindex="0" data-bind="buttonBlur, click: undoClick, tooltip: { content: tpUndo }, enable: stackUndo().length > 0"></button><button class="gcviz-draw-redo" tabindex="0" data-bind="buttonBlur, click: redoClick, tooltip: { content: tpRedo }, enable: stackRedo().length > 0"></button></div>';j+='<div class="gcviz-tbseparator"></div>';if(g.importexport.enable){j+='<div class="gcviz-inlineblock"><input id="fileDialogAnno" type="file" accept="application/json" data-bind="event: { change: importClick }" tabindex="-1"></input><button class="gcviz-draw-imp" tabindex="0" data-bind="buttonBlur, click: launchDialog, tooltip: { content: tpImport }"></button><button class="gcviz-draw-exp" tabindex="0" data-bind="buttonBlur, click: exportClick, tooltip: { content: tpExport }, enable: isGraphics"></button></div>'}j+='<div data-bind="uiDialog: { title: $root.lblTextTitle, width: 450, height: 220, ok: $root.dialogTextOk, cancel: $root.dialogTextCancel, close: $root.dialogTextClose, openDialog: \'isTextDialogOpen\' }"><div id="gcviz-draw-inputbox"><form><fieldset><label for="gcviz-textvalue" class="gcviz-label" data-bind="text: lblTextDesc"></label><input id="gcviz-textvalue" class="text ui-widget-content ui-corner-all" data-bind="value: drawTextValue, valueUpdate: \'afterkeydown\', returnKey: dialogTextOkEnter"/><div style="clear: both"></div><span data-bind="text: lblTextInfo"></span></fieldset></form></div></div>';j+='<div data-bind="wcag: { }, uiDialog: { title: $root.WCAGTitle, width: 490, height: 250, ok: $root.dialogWCAGOk, cancel: $root.dialogWCAGCancel, close: $root.dialogWCAGClose, openDialog: \'isDialogWCAG\' }"><div><label for="gcviz-xvalue" class="gcviz-label gcviz-label-wcag" data-bind="text: lblWCAGx"></label><input id="gcviz-xvalue" class="text ui-widget-content ui-corner-all gcviz-input-wcag" data-bind="value: xValue"/><span class="gcviz-message-wcag" data-bind="text: lblWCAGmsgx"></span></div><div><label for="gcviz-yvalue" class="gcviz-label gcviz-label-wcag" data-bind="text: lblWCAGy"></label><input id="gcviz-yvalue" class="text ui-widget-content ui-corner-all gcviz-input-wcag" data-bind="value: yValue"/><span class="gcviz-message-wcag" data-bind="text: lblWCAGmsgy"></span></div><div class="row" data-bind="visible: activeTool() !== \'text\'"><button class="gcviz-draw-wcagadd" tabindex="0" data-bind="click: addCoords, tooltip: { content: tpWCAGadd }"></button><ul data-bind="template: { name: \'coordsWCAG\', foreach: WCAGcoords }"></ul><script type="text/html" id="coordsWCAG"><li style="white-space: nowrap;"><span data-bind="text: \'x: \' + $data[0] + \', y: \' + $data[1]"></span></li><\/script></div></div>';h.append(j);return(d.initialize(h,f,g))};return{initialize:a}})}).call(this);